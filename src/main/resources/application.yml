server:
  port: 8084

spring:
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable:
          idempotence: true
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

  application:
    name: rating-microservice

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/cab-aggregator-db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:98479847}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true

  liquibase:
    change-log: classpath:db/changelog/main-changelog.xml
    default-schema: public
    contexts: development
    enabled: true

  cloud:
    openfeign:
      client:
        config:
          rides-microservice:
            url: ${RIDE_SERVER_URL:http://localhost:8083/api/rides}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}

logging:
  level:
    com:
      netflix:
        eureka: off
        discovery: off

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.request]": true